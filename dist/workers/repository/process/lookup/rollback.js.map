{"version":3,"file":"rollback.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/process/lookup/rollback.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,+CAA4C;AAE5C,sEAAwD;AASxD,SAAgB,iBAAiB,CAC/B,MAAsB,EACtB,QAAmB;;IAEnB,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,MAAM,CAAC;IAClE,MAAM,OAAO,GAAG,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC9C,qBAAqB;IACrB,IAAI,CAAC,CAAC,iBAAiB,IAAI,OAAO,CAAC,EAAE;QACnC,eAAM,CAAC,KAAK,CACV,EAAE,UAAU,EAAE,EACd,uDAAuD,CACxD,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IACD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAC7C,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CACjD,CAAC;IACF,qBAAqB;IACrB,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC5B,eAAM,CAAC,KAAK,CACV,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,EAAE,EACtC,6CAA6C,CAC9C,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IACD,eAAM,CAAC,KAAK,CACV,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,EAAE,EACtC,0CAA0C,CAC3C,CAAC;IACF,eAAM,CAAC,KAAK,CACV,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,EACjC,oCAAoC,CACrC,CAAC;IACF,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAC5E,MAAM,SAAS,SAAG,gBAAgB,CAAC,GAAG,EAAE,0CAAE,OAAO,CAAC;IAClD,qBAAqB;IACrB,IAAI,CAAC,SAAS,EAAE;QACd,eAAM,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;KACb;IACD,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC;QACnC,YAAY;QACZ,aAAa,EAAE,SAAS;QACxB,SAAS;KACV,CAAC,CAAC;IACH,OAAO;QACL,UAAU,EAAE,UAAU;QACtB,UAAU,EACR,oEAAoE;QACtE,mBAAmB,EAAE,WAAW;QAChC,UAAU,EAAE,IAAI;QAChB,QAAQ;QACR,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC;QACrC,kBAAkB,EAAE,KAAK;KAC1B,CAAC;AACJ,CAAC;AAvDD,8CAuDC","sourcesContent":["import { Release } from '../../../../datasource/common';\nimport { logger } from '../../../../logger';\nimport { LookupUpdate } from '../../../../manager/common';\nimport * as allVersioning from '../../../../versioning';\n\nexport interface RollbackConfig {\n  currentValue?: string;\n  depName?: string;\n  packageFile?: string;\n  versioning: string;\n}\n\nexport function getRollbackUpdate(\n  config: RollbackConfig,\n  versions: Release[]\n): LookupUpdate {\n  const { packageFile, versioning, depName, currentValue } = config;\n  const version = allVersioning.get(versioning);\n  // istanbul ignore if\n  if (!('isLessThanRange' in version)) {\n    logger.debug(\n      { versioning },\n      'Current versioning does not support isLessThanRange()'\n    );\n    return null;\n  }\n  const lessThanVersions = versions.filter((v) =>\n    version.isLessThanRange(v.version, currentValue)\n  );\n  // istanbul ignore if\n  if (!lessThanVersions.length) {\n    logger.debug(\n      { packageFile, depName, currentValue },\n      'Missing version has nothing to roll back to'\n    );\n    return null;\n  }\n  logger.debug(\n    { packageFile, depName, currentValue },\n    `Current version not found - rolling back`\n  );\n  logger.debug(\n    { dependency: depName, versions },\n    'Versions found before rolling back'\n  );\n  lessThanVersions.sort((a, b) => version.sortVersions(a.version, b.version));\n  const toVersion = lessThanVersions.pop()?.version;\n  // istanbul ignore if\n  if (!toVersion) {\n    logger.debug('No toVersion to roll back to');\n    return null;\n  }\n  const newValue = version.getNewValue({\n    currentValue,\n    rangeStrategy: 'replace',\n    toVersion,\n  });\n  return {\n    updateType: 'rollback',\n    branchName:\n      '{{{branchPrefix}}}rollback-{{{depNameSanitized}}}-{{{newMajor}}}.x',\n    commitMessageAction: 'Roll back',\n    isRollback: true,\n    newValue,\n    newMajor: version.getMajor(toVersion),\n    semanticCommitType: 'fix',\n  };\n}\n"]}