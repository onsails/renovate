{"version":3,"file":"changelogs.js","sourceRoot":"","sources":["../../../../lib/workers/pr/body/changelogs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAA0D;AAC1D,iEAAmD;AAEnD,6EAAwD;AAExD,SAAgB,aAAa,CAAC,MAAoB;IAChD,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,qBAAqB;IACrB,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;QAC3B,OAAO,YAAY,CAAC;KACrB;IACD,YAAY;QACV,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,sBAAe,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,MAAM,CAAC;IAC5E,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC7D,YAAY,GAAG,2BAAgB,CAAC,YAAY,CAAC,CAAC;IAC9C,OAAO,YAAY,CAAC;AACtB,CAAC;AAXD,sCAWC","sourcesContent":["import { sanitizeMarkdown } from '../../../util/markdown';\nimport * as template from '../../../util/template';\nimport { BranchConfig } from '../../common';\nimport releaseNotesHbs from '../changelog/hbs-template';\n\nexport function getChangelogs(config: BranchConfig): string {\n  let releaseNotes = '';\n  // istanbul ignore if\n  if (!config.hasReleaseNotes) {\n    return releaseNotes;\n  }\n  releaseNotes +=\n    '\\n\\n---\\n\\n' + template.compile(releaseNotesHbs, config, false) + '\\n\\n';\n  releaseNotes = releaseNotes.replace(/### \\[`vv/g, '### [`v');\n  releaseNotes = sanitizeMarkdown(releaseNotes);\n  return releaseNotes;\n}\n"]}