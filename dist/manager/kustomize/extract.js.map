{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/kustomize/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { safeLoad } from 'js-yaml';\nimport * as datasourceDocker from '../../datasource/docker';\nimport * as datasourceGitTags from '../../datasource/git-tags';\nimport * as datasourceGitHubTags from '../../datasource/github-tags';\nimport { logger } from '../../logger';\nimport * as dockerVersioning from '../../versioning/docker';\nimport { PackageDependency, PackageFile } from '../common';\n\ninterface Image {\n  name: string;\n  newTag: string;\n  newName?: string;\n}\n\ninterface Kustomize {\n  kind: string;\n  bases: string[];\n  images: Image[];\n}\n\n// URL specifications should follow the hashicorp URL format\n// https://github.com/hashicorp/go-getter#url-format\nconst gitUrl = /^(?:git::)?(?<url>(?:(?:(?:http|https|ssh):\\/\\/)?(?:.*@)?)?(?<path>(?:[^:/]+[:/])?(?<project>[^/]+\\/[^/]+)))(?<subdir>[^?]*)\\?ref=(?<currentValue>.+)$/;\n\nexport function extractBase(base: string): PackageDependency | null {\n  const match = gitUrl.exec(base);\n\n  if (!match) {\n    return null;\n  }\n\n  if (match?.groups.path.startsWith('github.com')) {\n    return {\n      currentValue: match.groups.currentValue,\n      datasource: datasourceGitHubTags.id,\n      depName: match.groups.project.replace('.git', ''),\n    };\n  }\n\n  return {\n    datasource: datasourceGitTags.id,\n    depName: match.groups.path.replace('.git', ''),\n    depNameShort: match.groups.project.replace('.git', ''),\n    lookupName: match.groups.url,\n    currentValue: match.groups.currentValue,\n  };\n}\n\nexport function extractImage(image: Image): PackageDependency | null {\n  if (image?.name && image.newTag) {\n    const replaceString = image.newTag;\n    let currentValue;\n    let currentDigest;\n    if (replaceString.startsWith('sha256:')) {\n      currentDigest = replaceString;\n      currentValue = undefined;\n    } else {\n      currentValue = replaceString;\n    }\n    return {\n      datasource: datasourceDocker.id,\n      versioning: dockerVersioning.id,\n      depName: image.newName ?? image.name,\n      currentValue,\n      currentDigest,\n      replaceString,\n    };\n  }\n\n  return null;\n}\n\nexport function parseKustomize(content: string): Kustomize | null {\n  let pkg = null;\n  try {\n    pkg = safeLoad(content, { json: true });\n  } catch (e) /* istanbul ignore next */ {\n    return null;\n  }\n\n  if (!pkg) {\n    return null;\n  }\n\n  if (pkg.kind !== 'Kustomization') {\n    return null;\n  }\n\n  pkg.bases = (pkg.bases || []).concat(pkg.resources || []);\n  pkg.images = pkg.images || [];\n\n  return pkg;\n}\n\nexport function extractPackageFile(content: string): PackageFile | null {\n  logger.trace('kustomize.extractPackageFile()');\n  const deps: PackageDependency[] = [];\n\n  const pkg = parseKustomize(content);\n  if (!pkg) {\n    return null;\n  }\n\n  // grab the remote bases\n  for (const base of pkg.bases) {\n    const dep = extractBase(base);\n    if (dep) {\n      deps.push(dep);\n    }\n  }\n\n  // grab the image tags\n  for (const image of pkg.images) {\n    const dep = extractImage(image);\n    if (dep) {\n      deps.push(dep);\n    }\n  }\n\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n"]}