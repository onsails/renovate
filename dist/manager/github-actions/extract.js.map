{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/github-actions/extract.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,mFAAqE;AACrE,yCAAsC;AACtC,uCAAyC;AACzC,0EAA4D;AAE5D,mDAA+C;AAE/C,SAAgB,kBAAkB,CAAC,OAAe;IAChD,eAAM,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;IACpD,MAAM,IAAI,GAAwB,EAAE,CAAC;IACrC,KAAK,MAAM,IAAI,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QACtC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YAC/B,SAAS,CAAC,kCAAkC;SAC7C;QAED,MAAM,WAAW,GAAG,kCAAkC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClE,IAAI,WAAW,EAAE;YACf,MAAM,CAAC,EAAE,WAAW,CAAC,GAAG,WAAW,CAAC;YACpC,MAAM,GAAG,GAAG,gBAAM,CAAC,WAAW,CAAC,CAAC;YAChC,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC;YACvB,GAAG,CAAC,UAAU,GAAG,gBAAgB,CAAC,EAAE,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACf,SAAS,CAAC,kCAAkC;SAC7C;QAED,MAAM,QAAQ,GAAG,kFAAkF,CAAC,IAAI,CACtG,IAAI,CACL,CAAC;QACF,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,EAAE;YACpB,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC;YAClD,MAAM,GAAG,GAAsB;gBAC7B,OAAO;gBACP,YAAY;gBACZ,kBAAkB,EAAE,sBAAsB;gBAC1C,UAAU,EAAE,oBAAoB,CAAC,EAAE;gBACnC,UAAU,EAAE,gBAAgB,CAAC,EAAE;gBAC/B,OAAO,EAAE,QAAQ;gBACjB,UAAU,EAAE,KAAK;aAClB,CAAC;YACF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBAC/C,GAAG,CAAC,UAAU,GAAG,kBAAU,CAAC,cAAc,CAAC;aAC5C;YACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChB;KACF;IACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QAChB,OAAO,IAAI,CAAC;KACb;IACD,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC;AA1CD,gDA0CC","sourcesContent":["import * as githubTagsDatasource from '../../datasource/github-tags';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport * as dockerVersioning from '../../versioning/docker';\nimport { PackageDependency, PackageFile } from '../common';\nimport { getDep } from '../dockerfile/extract';\n\nexport function extractPackageFile(content: string): PackageFile | null {\n  logger.trace('github-actions.extractPackageFile()');\n  const deps: PackageDependency[] = [];\n  for (const line of content.split('\\n')) {\n    if (line.trim().startsWith('#')) {\n      continue; // eslint-disable-line no-continue\n    }\n\n    const dockerMatch = /^\\s+uses: docker:\\/\\/([^\"]+)\\s*$/.exec(line);\n    if (dockerMatch) {\n      const [, currentFrom] = dockerMatch;\n      const dep = getDep(currentFrom);\n      dep.depType = 'docker';\n      dep.versioning = dockerVersioning.id;\n      deps.push(dep);\n      continue; // eslint-disable-line no-continue\n    }\n\n    const tagMatch = /^\\s+-?\\s+?uses: (?<depName>[\\w-]+\\/[\\w-]+)(?<path>.*)?@(?<currentValue>.+?)\\s*?$/.exec(\n      line\n    );\n    if (tagMatch?.groups) {\n      const { depName, currentValue } = tagMatch.groups;\n      const dep: PackageDependency = {\n        depName,\n        currentValue,\n        commitMessageTopic: '{{{depName}}} action',\n        datasource: githubTagsDatasource.id,\n        versioning: dockerVersioning.id,\n        depType: 'action',\n        pinDigests: false,\n      };\n      if (!dockerVersioning.api.isValid(currentValue)) {\n        dep.skipReason = SkipReason.InvalidVersion;\n      }\n      deps.push(dep);\n    }\n  }\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n"]}