{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../lib/manager/composer/utils.ts"],"names":[],"mappings":";;;AAAA,yCAAsC;AACtC,wDAA4E;AAInE,qGAJW,aAAoB,OAIX;AAE7B,SAAgB,aAAa,CAAC,MAA6B;IACzD,MAAM,EAAE,WAAW,GAAG,EAAE,EAAE,GAAG,MAAM,CAAC;IACpC,MAAM,EAAE,QAAQ,EAAE,GAAG,WAAW,CAAC;IAEjC,IAAI,QAAQ,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,uCAAuC,CAAC,CAAC;QACtD,OAAO,QAAQ,CAAC;KACjB;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAVD,sCAUC;AAED,SAAgB,iBAAiB,CAC/B,YAA4B,EAC5B,UAAwB;;IAExB,MAAM,GAAG,GAA2B,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IAExD,cAAc;IACd,UAAI,YAAY,CAAC,OAAO,0CAAE,GAAG,EAAE;QAC7B,GAAG,CAAC,GAAG,SAAG,YAAY,CAAC,OAAO,0CAAE,GAAG,CAAC;KACrC;IAED,qCAAqC;IACrC,UAAI,YAAY,CAAC,OAAO,0CAAG,mBAAmB,GAAG;QAC/C,GAAG,CAAC,QAAQ,SAAG,YAAY,CAAC,OAAO,0CAAG,mBAAmB,CAAC,CAAC;KAC5D;SAAM,UAAI,YAAY,CAAC,aAAa,CAAC,0CAAG,mBAAmB,GAAG;QAC7D,GAAG,CAAC,QAAQ,SAAG,YAAY,CAAC,aAAa,CAAC,0CAAG,mBAAmB,CAAC,CAAC;KACnE;IACD,mCAAmC;SAC9B,IAAI,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAG,oBAAoB,GAAG;QAC3C,MAAM,KAAK,GAAG,cAAG,CAAC,QAAQ,CAAC,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAG,oBAAoB,EAAE,CAAC;QAC/D,GAAG,CAAC,QAAQ,GAAG,GAAG,KAAK,IAAI,CAAC;KAC7B;IACD,gCAAgC;SAC3B,UAAI,YAAY,CAAC,OAAO,0CAAG,sBAAsB,GAAG;QACvD,MAAM,KAAK,GAAG,cAAG,CAAC,QAAQ,OAAC,YAAY,CAAC,OAAO,0CAAG,sBAAsB,EAAE,CAAC;QAC3E,GAAG,CAAC,QAAQ,GAAG,GAAG,KAAK,IAAI,CAAC;KAC7B;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AA5BD,8CA4BC","sourcesContent":["import { logger } from '../../logger';\nimport { api, id as composerVersioningId } from '../../versioning/composer';\nimport { UpdateArtifactsConfig } from '../common';\nimport type { ComposerConfig, ComposerLock } from './types';\n\nexport { composerVersioningId };\n\nexport function getConstraint(config: UpdateArtifactsConfig): string {\n  const { constraints = {} } = config;\n  const { composer } = constraints;\n\n  if (composer) {\n    logger.debug('Using composer constraint from config');\n    return composer;\n  }\n\n  return null;\n}\n\nexport function extractContraints(\n  composerJson: ComposerConfig,\n  lockParsed: ComposerLock\n): Record<string, string> {\n  const res: Record<string, string> = { composer: '1.*' };\n\n  // extract php\n  if (composerJson.require?.php) {\n    res.php = composerJson.require?.php;\n  }\n\n  // extract direct composer dependency\n  if (composerJson.require?.['composer/composer']) {\n    res.composer = composerJson.require?.['composer/composer'];\n  } else if (composerJson['require-dev']?.['composer/composer']) {\n    res.composer = composerJson['require-dev']?.['composer/composer'];\n  }\n  // check last used composer version\n  else if (lockParsed?.['plugin-api-version']) {\n    const major = api.getMajor(lockParsed?.['plugin-api-version']);\n    res.composer = `${major}.*`;\n  }\n  // check composer api dependency\n  else if (composerJson.require?.['composer-runtime-api']) {\n    const major = api.getMajor(composerJson.require?.['composer-runtime-api']);\n    res.composer = `${major}.*`;\n  }\n  return res;\n}\n"]}