{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../lib/manager/composer/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import url from 'url';\nimport is from '@sindresorhus/is';\nimport { quote } from 'shlex';\nimport upath from 'upath';\nimport { SYSTEM_INSUFFICIENT_DISK_SPACE } from '../../constants/error-messages';\nimport {\n  PLATFORM_TYPE_GITHUB,\n  PLATFORM_TYPE_GITLAB,\n} from '../../constants/platforms';\nimport * as datasourcePackagist from '../../datasource/packagist';\nimport { logger } from '../../logger';\nimport { HostRule } from '../../types';\nimport { ExecOptions, exec } from '../../util/exec';\nimport {\n  deleteLocalFile,\n  ensureDir,\n  ensureLocalDir,\n  getSiblingFileName,\n  localPathExists,\n  readLocalFile,\n  writeLocalFile,\n} from '../../util/fs';\nimport { getRepoStatus } from '../../util/git';\nimport * as hostRules from '../../util/host-rules';\nimport { UpdateArtifact, UpdateArtifactsResult } from '../common';\nimport { composerVersioningId, getConstraint } from './utils';\n\ninterface UserPass {\n  username: string;\n  password: string;\n}\n\ninterface AuthJson {\n  'github-oauth'?: Record<string, string>;\n  'gitlab-token'?: Record<string, string>;\n  'http-basic'?: Record<string, UserPass>;\n}\n\nfunction getHost({\n  hostName,\n  domainName,\n  endpoint,\n  baseUrl,\n}: HostRule): string | null {\n  let host = hostName || domainName;\n  if (!host) {\n    try {\n      host = endpoint || baseUrl;\n      host = url.parse(host).host;\n    } catch (err) {\n      logger.warn(`Composer: can't parse ${host}`);\n      host = null;\n    }\n  }\n  return host;\n}\n\nfunction getAuthJson(): string | null {\n  const authJson: AuthJson = {};\n\n  const githubCredentials = hostRules.find({\n    hostType: PLATFORM_TYPE_GITHUB,\n    url: 'https://api.github.com/',\n  });\n  if (githubCredentials?.token) {\n    authJson['github-oauth'] = {\n      'github.com': githubCredentials.token.replace('x-access-token:', ''),\n    };\n  }\n\n  const gitlabCredentials = hostRules.find({\n    hostType: PLATFORM_TYPE_GITLAB,\n    url: 'https://gitlab.com/api/v4/',\n  });\n  if (gitlabCredentials?.token) {\n    authJson['gitlab-token'] = {\n      'gitlab.com': gitlabCredentials.token,\n    };\n  }\n\n  hostRules\n    .findAll({ hostType: datasourcePackagist.id })\n    ?.forEach((hostRule) => {\n      const { username, password } = hostRule;\n      const host = getHost(hostRule);\n      if (host && username && password) {\n        authJson['http-basic'] = authJson['http-basic'] || {};\n        authJson['http-basic'][host] = { username, password };\n      }\n    });\n\n  return is.emptyObject(authJson) ? null : JSON.stringify(authJson);\n}\n\nexport async function updateArtifacts({\n  packageFileName,\n  updatedDeps,\n  newPackageFileContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.debug(`composer.updateArtifacts(${packageFileName})`);\n\n  const cacheDir =\n    process.env.COMPOSER_CACHE_DIR ||\n    upath.join(config.cacheDir, './others/composer');\n  await ensureDir(cacheDir);\n  logger.debug(`Using composer cache ${cacheDir}`);\n\n  const lockFileName = packageFileName.replace(/\\.json$/, '.lock');\n  const existingLockFileContent = await readLocalFile(lockFileName);\n  if (!existingLockFileContent) {\n    logger.debug('No composer.lock found');\n    return null;\n  }\n\n  const vendorDir = getSiblingFileName(packageFileName, 'vendor');\n  const commitVendorFiles = await localPathExists(vendorDir);\n  await ensureLocalDir(vendorDir);\n  try {\n    await writeLocalFile(packageFileName, newPackageFileContent);\n    if (config.isLockFileMaintenance) {\n      await deleteLocalFile(lockFileName);\n    }\n\n    const execOptions: ExecOptions = {\n      cwdFile: packageFileName,\n      extraEnv: {\n        COMPOSER_CACHE_DIR: cacheDir,\n        COMPOSER_AUTH: getAuthJson(),\n      },\n      docker: {\n        image: 'renovate/composer',\n        tagConstraint: getConstraint(config),\n        tagScheme: composerVersioningId,\n      },\n    };\n    const cmd = 'composer';\n    let args: string;\n    if (config.isLockFileMaintenance) {\n      args = 'install';\n    } else {\n      args =\n        ('update ' + updatedDeps.map(quote).join(' ')).trim() +\n        ' --with-dependencies';\n    }\n    if (config.composerIgnorePlatformReqs) {\n      args += ' --ignore-platform-reqs';\n    }\n    args += ' --no-ansi --no-interaction';\n    if (global.trustLevel !== 'high' || config.ignoreScripts) {\n      args += ' --no-scripts --no-autoloader';\n    }\n    logger.debug({ cmd, args }, 'composer command');\n    await exec(`${cmd} ${args}`, execOptions);\n    const status = await getRepoStatus();\n    if (!status.modified.includes(lockFileName)) {\n      return null;\n    }\n    logger.debug('Returning updated composer.lock');\n    const res: UpdateArtifactsResult[] = [\n      {\n        file: {\n          name: lockFileName,\n          contents: await readLocalFile(lockFileName),\n        },\n      },\n    ];\n\n    if (!commitVendorFiles) {\n      return res;\n    }\n\n    logger.debug(`Commiting vendor files in ${vendorDir}`);\n    for (const f of [...status.modified, ...status.not_added]) {\n      if (f.startsWith(vendorDir)) {\n        res.push({\n          file: {\n            name: f,\n            contents: await readLocalFile(f),\n          },\n        });\n      }\n    }\n    for (const f of status.deleted) {\n      res.push({\n        file: {\n          name: '|delete|',\n          contents: f,\n        },\n      });\n    }\n\n    return res;\n  } catch (err) {\n    if (\n      err.message?.includes(\n        'Your requirements could not be resolved to an installable set of packages.'\n      )\n    ) {\n      logger.info('Composer requirements cannot be resolved');\n    } else if (err.message?.includes('write error (disk full?)')) {\n      throw new Error(SYSTEM_INSUFFICIENT_DISK_SPACE);\n    } else {\n      logger.debug({ err }, 'Failed to generate composer.lock');\n    }\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n"]}