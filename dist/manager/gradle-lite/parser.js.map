{"version":3,"file":"parser.js","sourceRoot":"","sources":["../../../lib/manager/gradle-lite/parser.ts"],"names":[],"mappings":"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","sourcesContent":["import * as url from 'url';\nimport is from '@sindresorhus/is';\nimport { logger } from '../../logger';\nimport { regEx } from '../../util/regex';\nimport { PackageDependency } from '../common';\nimport {\n  GOOGLE_REPO,\n  JCENTER_REPO,\n  MAVEN_REPO,\n  ManagerData,\n  PackageVariables,\n  StringInterpolation,\n  SyntaxHandlerInput,\n  SyntaxHandlerOutput,\n  SyntaxMatchConfig,\n  SyntaxMatcher,\n  Token,\n  TokenMap,\n  TokenType,\n  VariableData,\n} from './common';\nimport { tokenize } from './tokenizer';\nimport {\n  interpolateString,\n  isDependencyString,\n  parseDependencyString,\n} from './utils';\n\nfunction matchTokens(\n  tokens: Token[],\n  matchers: SyntaxMatcher[]\n): TokenMap | null {\n  let lookaheadCount = 0;\n  const result: TokenMap = {};\n  for (let idx = 0; idx < matchers.length; idx += 1) {\n    const token = tokens[idx];\n    const matcher = matchers[idx];\n\n    if (!token) {\n      if (matcher.lookahead) {\n        break;\n      }\n      return null;\n    }\n\n    const typeMatches = is.string(matcher.matchType)\n      ? matcher.matchType === token.type\n      : matcher.matchType.includes(token.type);\n    if (!typeMatches) {\n      return null;\n    }\n\n    if (is.string(matcher.matchValue) && token.value !== matcher.matchValue) {\n      return null;\n    }\n\n    if (\n      is.array<string>(matcher.matchValue) &&\n      !matcher.matchValue.includes(token.value)\n    ) {\n      return null;\n    }\n\n    lookaheadCount = matcher.lookahead ? lookaheadCount + 1 : 0;\n\n    if (matcher.tokenMapKey) {\n      result[matcher.tokenMapKey] = token;\n    }\n  }\n\n  tokens.splice(0, matchers.length - lookaheadCount);\n  return result;\n}\n\nconst endOfInstruction: SyntaxMatcher = {\n  // Ensure we skip assignments of complex expressions (not strings)\n  matchType: [\n    TokenType.Semicolon,\n    TokenType.RightBrace,\n    TokenType.Word,\n    TokenType.String,\n    TokenType.StringInterpolation,\n  ],\n  lookahead: true,\n};\n\nconst potentialStringTypes = [TokenType.String, TokenType.Word];\n\nfunction coercePotentialString(\n  token: Token,\n  variables: PackageVariables\n): string | null {\n  const tokenType = token?.type;\n  if (tokenType === TokenType.String) {\n    return token?.value;\n  }\n  if (\n    tokenType === TokenType.Word &&\n    typeof variables[token?.value] !== 'undefined'\n  ) {\n    return variables[token.value].value;\n  }\n  return null;\n}\n\nfunction handleAssignment({\n  packageFile,\n  tokenMap,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const { keyToken, valToken } = tokenMap;\n  const variableData: VariableData = {\n    key: keyToken.value,\n    value: valToken.value,\n    fileReplacePosition: valToken.offset,\n    packageFile,\n  };\n  return { vars: { [variableData.key]: variableData } };\n}\n\nfunction processDepString({\n  packageFile,\n  tokenMap,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const { token } = tokenMap;\n  const dep = parseDependencyString(token.value);\n  if (dep) {\n    dep.managerData = {\n      fileReplacePosition: token.offset + dep.depName.length + 1,\n      packageFile,\n    };\n    return { deps: [dep] };\n  }\n  return null;\n}\n\nfunction processDepInterpolation({\n  tokenMap,\n  variables,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const token = tokenMap.depInterpolation as StringInterpolation;\n  const interpolationResult = interpolateString(token.children, variables);\n  if (interpolationResult && isDependencyString(interpolationResult)) {\n    const dep = parseDependencyString(interpolationResult);\n    if (dep) {\n      const lastChild = token.children[token.children.length - 1];\n      const lastChildValue = lastChild?.value;\n      const variable = variables[lastChildValue];\n      if (\n        lastChild?.type === TokenType.Variable &&\n        variable &&\n        variable?.value === dep.currentValue\n      ) {\n        dep.managerData = {\n          fileReplacePosition: variable.fileReplacePosition,\n          packageFile: variable.packageFile,\n        };\n        dep.groupName = variable.key;\n        return { deps: [dep] };\n      }\n    }\n  }\n  return null;\n}\n\nfunction processPlugin({\n  tokenMap,\n  packageFile,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const { pluginName, pluginVersion, methodName } = tokenMap;\n  const plugin = pluginName.value;\n  const depName =\n    methodName.value === 'kotlin' ? `org.jetbrains.kotlin.${plugin}` : plugin;\n  const lookupName =\n    methodName.value === 'kotlin'\n      ? `org.jetbrains.kotlin.${plugin}:org.jetbrains.kotlin.${plugin}.gradle.plugin`\n      : `${plugin}:${plugin}.gradle.plugin`;\n  const currentValue = pluginVersion.value;\n  const fileReplacePosition = pluginVersion.offset;\n  const dep = {\n    depType: 'plugin',\n    depName,\n    lookupName,\n    registryUrls: ['https://plugins.gradle.org/m2/'],\n    currentValue,\n    commitMessageTopic: `plugin ${depName}`,\n    managerData: {\n      fileReplacePosition,\n      packageFile,\n    },\n  };\n  return { deps: [dep] };\n}\n\nfunction processCustomRegistryUrl({\n  tokenMap,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const registryUrl = tokenMap.registryUrl?.value;\n  try {\n    if (registryUrl) {\n      const { host, protocol } = url.parse(registryUrl);\n      if (host && protocol) {\n        return { urls: [registryUrl] };\n      }\n    }\n  } catch (e) {\n    // no-op\n  }\n  return null;\n}\n\nfunction processPredefinedRegistryUrl({\n  tokenMap,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const registryName = tokenMap.registryName?.value;\n  const registryUrl = {\n    mavenCentral: MAVEN_REPO,\n    jcenter: JCENTER_REPO,\n    google: GOOGLE_REPO,\n  }[registryName];\n  return { urls: [registryUrl] };\n}\n\nfunction processLongFormDep({\n  tokenMap,\n  variables,\n  packageFile,\n}: SyntaxHandlerInput): SyntaxHandlerOutput {\n  const groupId = coercePotentialString(tokenMap.groupId, variables);\n  const artifactId = coercePotentialString(tokenMap.artifactId, variables);\n  const version = coercePotentialString(tokenMap.version, variables);\n  const dep = parseDependencyString([groupId, artifactId, version].join(':'));\n  if (dep) {\n    const versionToken: Token = tokenMap.version;\n    if (versionToken.type === TokenType.Word) {\n      const variable = variables[versionToken.value];\n      dep.managerData = {\n        fileReplacePosition: variable.fileReplacePosition,\n        packageFile: variable.packageFile,\n      };\n    } else {\n      dep.managerData = {\n        fileReplacePosition: versionToken.offset,\n        packageFile,\n      };\n    }\n    return { deps: [dep] };\n  }\n  return null;\n}\n\nconst matcherConfigs: SyntaxMatchConfig[] = [\n  {\n    // foo = 'bar'\n    matchers: [\n      { matchType: TokenType.Word, tokenMapKey: 'keyToken' },\n      { matchType: TokenType.Assignment },\n      { matchType: TokenType.String, tokenMapKey: 'valToken' },\n      endOfInstruction,\n    ],\n    handler: handleAssignment,\n  },\n  {\n    // 'foo.bar:baz:1.2.3'\n    matchers: [\n      {\n        matchType: TokenType.String,\n        tokenMapKey: 'token',\n      },\n    ],\n    handler: processDepString,\n  },\n  {\n    // \"foo.bar:baz:${bazVersion}\"\n    matchers: [\n      {\n        matchType: TokenType.StringInterpolation,\n        tokenMapKey: 'depInterpolation',\n      },\n    ],\n    handler: processDepInterpolation,\n  },\n  {\n    // id 'foo.bar' version '1.2.3'\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: ['id', 'kotlin'],\n        tokenMapKey: 'methodName',\n      },\n      { matchType: TokenType.String, tokenMapKey: 'pluginName' },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.String, tokenMapKey: 'pluginVersion' },\n      endOfInstruction,\n    ],\n    handler: processPlugin,\n  },\n  {\n    // id('foo.bar') version '1.2.3'\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: ['id', 'kotlin'],\n        tokenMapKey: 'methodName',\n      },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.String, tokenMapKey: 'pluginName' },\n      { matchType: TokenType.RightParen },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.String, tokenMapKey: 'pluginVersion' },\n      endOfInstruction,\n    ],\n    handler: processPlugin,\n  },\n  {\n    // mavenCentral()\n    matchers: [\n      {\n        matchType: TokenType.Word,\n        matchValue: ['mavenCentral', 'jcenter', 'google'],\n        tokenMapKey: 'registryName',\n      },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.RightParen },\n      endOfInstruction,\n    ],\n    handler: processPredefinedRegistryUrl,\n  },\n  {\n    // url 'https://repo.spring.io/snapshot/'\n    matchers: [\n      { matchType: TokenType.Word, matchValue: ['uri', 'url'] },\n      { matchType: TokenType.String, tokenMapKey: 'registryUrl' },\n      endOfInstruction,\n    ],\n    handler: processCustomRegistryUrl,\n  },\n  {\n    // url('https://repo.spring.io/snapshot/')\n    matchers: [\n      { matchType: TokenType.Word, matchValue: ['uri', 'url'] },\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.String, tokenMapKey: 'registryUrl' },\n      { matchType: TokenType.RightParen },\n      endOfInstruction,\n    ],\n    handler: processCustomRegistryUrl,\n  },\n  {\n    // group: \"com.example\", name: \"my.dependency\", version: \"1.2.3\"\n    matchers: [\n      { matchType: TokenType.Word, matchValue: 'group' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'name' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.Colon },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      endOfInstruction,\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // (\"com.example\", \"my.dependency\", \"1.2.3\")\n    matchers: [\n      { matchType: TokenType.LeftParen },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processLongFormDep,\n  },\n  {\n    // (group = \"com.example\", name = \"my.dependency\", version = \"1.2.3\")\n    matchers: [\n      { matchType: TokenType.LeftParen },\n      { matchType: TokenType.Word, matchValue: 'group' },\n      { matchType: TokenType.Assignment },\n      { matchType: potentialStringTypes, tokenMapKey: 'groupId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'name' },\n      { matchType: TokenType.Assignment },\n      { matchType: potentialStringTypes, tokenMapKey: 'artifactId' },\n      { matchType: TokenType.Comma },\n      { matchType: TokenType.Word, matchValue: 'version' },\n      { matchType: TokenType.Assignment },\n      { matchType: potentialStringTypes, tokenMapKey: 'version' },\n      { matchType: TokenType.RightParen },\n    ],\n    handler: processLongFormDep,\n  },\n];\n\ninterface MatchConfig {\n  tokens: Token[];\n  variables: PackageVariables;\n  packageFile: string;\n}\n\nfunction tryMatch({\n  tokens,\n  variables,\n  packageFile,\n}: MatchConfig): SyntaxHandlerOutput {\n  for (const { matchers, handler } of matcherConfigs) {\n    const tokenMap = matchTokens(tokens, matchers);\n    if (tokenMap) {\n      const result = handler({\n        packageFile,\n        variables,\n        tokenMap,\n      });\n      if (result !== null) {\n        return result;\n      }\n    }\n  }\n  tokens.shift();\n  return null;\n}\n\nexport function parseGradle(\n  input: string,\n  initVars: PackageVariables = {},\n  packageFile?: string\n): { deps: PackageDependency<ManagerData>[]; urls: string[] } {\n  const vars = { ...initVars };\n  const deps: PackageDependency<ManagerData>[] = [];\n  const urls = [];\n\n  const tokens = tokenize(input);\n  let prevTokensLength = tokens.length;\n  while (tokens.length) {\n    const matchResult = tryMatch({ tokens, variables: vars, packageFile });\n    if (matchResult?.deps?.length) {\n      deps.push(...matchResult.deps);\n    }\n    if (matchResult?.vars) {\n      Object.assign(vars, matchResult.vars);\n    }\n    if (matchResult?.urls) {\n      urls.push(...matchResult.urls);\n    }\n\n    // istanbul ignore if\n    if (tokens.length >= prevTokensLength) {\n      // Should not happen, but it's better to be prepared\n      logger.warn(\n        { packageFile },\n        `${packageFile} parsing error, results can be incomplete`\n      );\n      break;\n    }\n    prevTokensLength = tokens.length;\n  }\n\n  return { deps, urls };\n}\n\nconst propWord = '[a-zA-Z_][a-zA-Z0-9_]*(?:\\\\.[a-zA-Z_][a-zA-Z0-9_]*)*';\nconst propRegex = regEx(\n  `^(?<leftPart>\\\\s*(?<key>${propWord})\\\\s*=\\\\s*['\"]?)(?<value>[^\\\\s'\"]+)['\"]?\\\\s*$`\n);\n\nexport function parseProps(\n  input: string,\n  packageFile?: string\n): { vars: PackageVariables; deps: PackageDependency<ManagerData>[] } {\n  let offset = 0;\n  const vars = {};\n  const deps = [];\n  for (const line of input.split('\\n')) {\n    const lineMatch = propRegex.exec(line);\n    if (lineMatch) {\n      const { key, value, leftPart } = lineMatch.groups;\n      if (isDependencyString(value)) {\n        const dep = parseDependencyString(value);\n        deps.push({\n          ...dep,\n          managerData: {\n            fileReplacePosition:\n              offset + leftPart.length + dep.depName.length + 1,\n            packageFile,\n          },\n        });\n      } else {\n        vars[key] = {\n          key,\n          value,\n          fileReplacePosition: offset + leftPart.length,\n          packageFile,\n        };\n      }\n    }\n    offset += line.length + 1;\n  }\n  return { vars, deps };\n}\n"]}