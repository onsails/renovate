{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../lib/manager/terragrunt/util.ts"],"names":[],"mappings":";;;AAEa,QAAA,uBAAuB,GAAG,wCAAwC,CAAC;AAOhF,IAAY,yBAGX;AAHD,WAAY,yBAAyB;IACnC,gDAAmB,CAAA;IACnB,qDAAwB,CAAA;AAC1B,CAAC,EAHW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAGpC;AAMD,IAAY,uBAKX;AALD,WAAY,uBAAuB;IACjC,8CAAmB,CAAA;IACnB;;OAEG;AACL,CAAC,EALW,uBAAuB,GAAvB,+BAAuB,KAAvB,+BAAuB,QAKlC;AAUD,SAAgB,2BAA2B,CACzC,KAAa;IAEb,QAAQ,KAAK,EAAE;QACb,KAAK,WAAW,CAAC,CAAC;YAChB,OAAO,yBAAyB,CAAC,UAAU,CAAC;SAC7C;QACD,OAAO,CAAC,CAAC;YACP,OAAO,yBAAyB,CAAC,OAAO,CAAC;SAC1C;KACF;AACH,CAAC;AAXD,kEAWC;AAED,SAAgB,2BAA2B,CACzC,OAAe,EACf,SAAmB;IAEnB,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,CAAC;AALD,kEAKC","sourcesContent":["import { PackageDependency } from '../common';\n\nexport const keyValueExtractionRegex = /^\\s*source\\s+=\\s+\"(?<value>[^\"]+)\"\\s*$/;\n\nexport interface ExtractionResult {\n  lineNumber: number;\n  dependencies: PackageDependency[];\n}\n\nexport enum TerragruntDependencyTypes {\n  unknown = 'unknown',\n  terragrunt = 'terraform',\n}\n\nexport interface TerraformManagerData {\n  terragruntDependencyType: TerragruntDependencyTypes;\n}\n\nexport enum TerragruntResourceTypes {\n  unknown = 'unknown',\n  /**\n   * https://www.terraform.io/docs/providers/docker/r/container.html\n   */\n}\n\nexport interface ResourceManagerData extends TerraformManagerData {\n  resourceType?: TerragruntResourceTypes;\n  chart?: string;\n  image?: string;\n  name?: string;\n  repository?: string;\n}\n\nexport function getTerragruntDependencyType(\n  value: string\n): TerragruntDependencyTypes {\n  switch (value) {\n    case 'terraform': {\n      return TerragruntDependencyTypes.terragrunt;\n    }\n    default: {\n      return TerragruntDependencyTypes.unknown;\n    }\n  }\n}\n\nexport function checkFileContainsDependency(\n  content: string,\n  checkList: string[]\n): boolean {\n  return checkList.some((check) => content.includes(check));\n}\n"]}