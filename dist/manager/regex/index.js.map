{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/manager/regex/index.ts"],"names":[],"mappings":"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","sourcesContent":["import url from 'url';\nimport { logger } from '../../logger';\nimport { regEx } from '../../util/regex';\nimport * as template from '../../util/template';\nimport {\n  CustomExtractConfig,\n  PackageDependency,\n  PackageFile,\n  Result,\n} from '../common';\n\nexport const defaultConfig = {\n  pinDigests: false,\n};\n\nconst validMatchFields = [\n  'depName',\n  'lookupName',\n  'currentValue',\n  'currentDigest',\n  'datasource',\n  'versioning',\n  'extractVersion',\n  'registryUrl',\n];\n\nfunction regexMatchAll(regex: RegExp, content: string): RegExpMatchArray[] {\n  const matches: RegExpMatchArray[] = [];\n  let matchResult;\n  do {\n    matchResult = regex.exec(content);\n    if (matchResult) {\n      matches.push(matchResult);\n    }\n  } while (matchResult);\n  return matches;\n}\n\nfunction createDependency(\n  matchResult: RegExpMatchArray,\n  config: CustomExtractConfig,\n  dep?: PackageDependency\n): PackageDependency {\n  const dependency = dep || {};\n  const { groups } = matchResult;\n  for (const field of validMatchFields) {\n    const fieldTemplate = `${field}Template`;\n    if (config[fieldTemplate]) {\n      try {\n        dependency[field] = template.compile(config[fieldTemplate], groups);\n      } catch (err) {\n        logger.warn(\n          { template: config[fieldTemplate] },\n          'Error compiling template for custom manager'\n        );\n        return null;\n      }\n    } else if (groups[field]) {\n      switch (field) {\n        case 'registryUrl':\n          // check if URL is valid and pack inside an array\n          if (url.parse(groups[field])) {\n            dependency.registryUrls = [groups[field]];\n          }\n          break;\n        default:\n          dependency[field] = groups[field];\n          break;\n      }\n    }\n  }\n  dependency.replaceString = String(matchResult[0]);\n  return dependency;\n}\n\nfunction mergeDependency(deps: PackageDependency[]): PackageDependency {\n  const result: PackageDependency = {};\n  deps.forEach((dep) => {\n    validMatchFields.forEach((field) => {\n      if (dep[field]) {\n        result[field] = dep[field];\n        // save the line replaceString of the section which contains the current Value for a speed up lookup during the replace phase\n        if (field === 'currentValue') {\n          result.replaceString = dep.replaceString;\n        }\n      }\n    });\n  });\n  return result;\n}\n\nfunction handleAny(\n  content: string,\n  packageFile: string,\n  config: CustomExtractConfig\n): PackageDependency[] {\n  return config.matchStrings\n    .map((matchString) => regEx(matchString, 'g'))\n    .flatMap((regex) => regexMatchAll(regex, content)) // match all regex to content, get all matches, reduce to single array\n    .map((matchResult) => createDependency(matchResult, config));\n}\n\nfunction handleCombination(\n  content: string,\n  packageFile: string,\n  config: CustomExtractConfig\n): PackageDependency[] {\n  const dep = handleAny(content, packageFile, config).reduce(\n    (mergedDep, currentDep) => mergeDependency([mergedDep, currentDep]),\n    {}\n  ); // merge fields of dependencies\n  return [dep];\n}\n\nfunction handleRecursive(\n  content: string,\n  packageFile: string,\n  config: CustomExtractConfig,\n  index = 0\n): PackageDependency[] {\n  const regexes = config.matchStrings.map((matchString) =>\n    regEx(matchString, 'g')\n  );\n  // abort if we have no matchString anymore\n  if (regexes[index] == null) {\n    return [];\n  }\n  return regexMatchAll(regexes[index], content).flatMap((match) => {\n    // if we have a depName and a currentValue with have the minimal viable definition\n    if (match?.groups?.depName && match?.groups?.currentValue) {\n      return createDependency(match, config);\n    }\n    return handleRecursive(match[0], packageFile, config, index + 1);\n  });\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string,\n  config: CustomExtractConfig\n): Result<PackageFile | null> {\n  let deps: PackageDependency[];\n  switch (config.matchStringsStrategy) {\n    default:\n    case 'any':\n      deps = handleAny(content, packageFile, config);\n      break;\n    case 'combination':\n      deps = handleCombination(content, packageFile, config);\n      break;\n    case 'recursive':\n      deps = handleRecursive(content, packageFile, config);\n      break;\n  }\n\n  // filter all null values\n  deps = deps.filter(Boolean);\n  if (deps.length) {\n    const res: PackageFile = { deps, matchStrings: config.matchStrings };\n    if (config.matchStringsStrategy) {\n      res.matchStringsStrategy = config.matchStringsStrategy;\n    }\n    // copy over templates for autoreplace\n    for (const field of validMatchFields.map((f) => `${f}Template`)) {\n      if (config[field]) {\n        res[field] = config[field];\n      }\n    }\n    return res;\n  }\n\n  return null;\n}\n"]}