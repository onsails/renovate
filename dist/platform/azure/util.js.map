{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../lib/platform/azure/util.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  GitPullRequest,\n  GitStatusContext,\n  PullRequestAsyncStatus,\n  PullRequestStatus,\n} from 'azure-devops-node-api/interfaces/GitInterfaces';\nimport { logger } from '../../logger';\nimport { PrState } from '../../types';\nimport { AzurePr } from './types';\n\nexport function getNewBranchName(branchName?: string): string {\n  if (branchName && !branchName.startsWith('refs/heads/')) {\n    return `refs/heads/${branchName}`;\n  }\n  return branchName;\n}\n\nexport function getGitStatusContextCombinedName(\n  context: GitStatusContext\n): string | undefined {\n  if (!context) {\n    return undefined;\n  }\n  const combinedName = `${context.genre ? `${context.genre}/` : ''}${\n    context.name\n  }`;\n  logger.trace(`Got combined context name of ${combinedName}`);\n  return combinedName;\n}\n\nexport function getGitStatusContextFromCombinedName(\n  context: string\n): GitStatusContext | undefined {\n  if (!context) {\n    return undefined;\n  }\n  let name = context;\n  let genre;\n  const lastSlash = context.lastIndexOf('/');\n  if (lastSlash > 0) {\n    name = context.substr(lastSlash + 1);\n    genre = context.substr(0, lastSlash);\n  }\n  return {\n    genre,\n    name,\n  };\n}\n\nexport function getBranchNameWithoutRefsheadsPrefix(\n  branchPath: string\n): string | undefined {\n  if (!branchPath) {\n    logger.error(`getBranchNameWithoutRefsheadsPrefix(${branchPath})`);\n    return undefined;\n  }\n  if (!branchPath.startsWith('refs/heads/')) {\n    logger.trace(\n      `The refs/heads/ name should have started with 'refs/heads/' but it didn't. (${branchPath})`\n    );\n    return branchPath;\n  }\n  return branchPath.substring(11, branchPath.length);\n}\n\nexport function getBranchNameWithoutRefsPrefix(\n  branchPath?: string\n): string | undefined {\n  if (!branchPath) {\n    logger.error(`getBranchNameWithoutRefsPrefix(${branchPath})`);\n    return undefined;\n  }\n  if (!branchPath.startsWith('refs/')) {\n    logger.trace(\n      `The ref name should have started with 'refs/' but it didn't. (${branchPath})`\n    );\n    return branchPath;\n  }\n  return branchPath.substring(5, branchPath.length);\n}\n\nexport function getRenovatePRFormat(azurePr: GitPullRequest): AzurePr {\n  const number = azurePr.pullRequestId;\n  const displayNumber = `Pull Request #${number}`;\n\n  const sourceBranch = getBranchNameWithoutRefsheadsPrefix(\n    azurePr.sourceRefName\n  );\n  const targetBranch = getBranchNameWithoutRefsheadsPrefix(\n    azurePr.targetRefName\n  );\n  const body = azurePr.description;\n\n  const createdAt = azurePr.creationDate?.toISOString();\n  const state =\n    {\n      [PullRequestStatus.Abandoned]: PrState.Closed,\n      [PullRequestStatus.Completed]: PrState.Merged,\n    }[azurePr.status] || PrState.Open;\n\n  const sourceRefName = azurePr.sourceRefName;\n\n  const isConflicted = azurePr.mergeStatus === PullRequestAsyncStatus.Conflicts;\n\n  return {\n    ...azurePr,\n    sourceBranch,\n    state,\n    number,\n    displayNumber,\n    body,\n    sourceRefName,\n    targetBranch,\n    createdAt,\n    ...(isConflicted && { isConflicted }),\n  } as AzurePr;\n}\n"]}