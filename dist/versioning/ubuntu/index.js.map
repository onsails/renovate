{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/versioning/ubuntu/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { NewValueConfig, VersioningApi } from '../common';\n\nexport const id = 'ubuntu';\nexport const displayName = 'Ubuntu';\nexport const urls = ['https://changelogs.ubuntu.com/meta-release'];\nexport const supportsRanges = false;\n\n// validation\n\nfunction isValid(input: string): string | boolean | null {\n  return (\n    typeof input === 'string' &&\n    /^(0[4-5]|[6-9]|[1-9][0-9])\\.[0-9][0-9](\\.[0-9]{1,2})?$/.test(input)\n  );\n}\n\nfunction isVersion(input: string): string | boolean | null {\n  return isValid(input);\n}\n\nfunction isCompatible(\n  version: string,\n  _range?: string\n): string | boolean | null {\n  return isValid(version);\n}\n\nfunction isSingleVersion(version: string): string | boolean | null {\n  return isValid(version) ? true : null;\n}\n\nfunction isStable(version: string): boolean {\n  if (!isValid(version)) {\n    return false;\n  }\n  return /^\\d?[02468]\\.04/.test(version);\n}\n\n// digestion of version\n\nfunction getMajor(version: string): null | number {\n  if (isValid(version)) {\n    const [major] = version.split('.') || [];\n    return parseInt(major, 10);\n  }\n  return null;\n}\n\nfunction getMinor(version: string): null | number {\n  if (isValid(version)) {\n    const [, minor] = version.split('.') || [];\n    return parseInt(minor, 10);\n  }\n  return null;\n}\n\nfunction getPatch(version: string): null | number {\n  if (isValid(version)) {\n    const [, , patch] = version.split('.') || [];\n    return patch ? parseInt(patch, 10) : null;\n  }\n  return null;\n}\n\n// comparison\n\nfunction equals(version: string, other: string): boolean {\n  return isVersion(version) && isVersion(other) && version === other;\n}\n\nfunction isGreaterThan(version: string, other: string): boolean {\n  const xMajor = getMajor(version);\n  const yMajor = getMajor(other);\n  if (xMajor > yMajor) {\n    return true;\n  }\n  if (xMajor < yMajor) {\n    return false;\n  }\n\n  const xMinor = getMinor(version);\n  const yMinor = getMinor(other);\n  if (xMinor > yMinor) {\n    return true;\n  }\n  if (xMinor < yMinor) {\n    return false;\n  }\n\n  const xPatch = getPatch(version) || 0;\n  const yPatch = getPatch(other) || 0;\n  return xPatch > yPatch;\n}\n\nfunction getSatisfyingVersion(\n  versions: string[],\n  range: string\n): string | null {\n  return versions.find((version) => equals(version, range)) ? range : null;\n}\n\nfunction minSatisfyingVersion(\n  versions: string[],\n  range: string\n): string | null {\n  return getSatisfyingVersion(versions, range);\n}\n\nfunction getNewValue(newValueConfig: NewValueConfig): string {\n  return newValueConfig.toVersion;\n}\n\nfunction sortVersions(version: string, other: string): number {\n  if (equals(version, other)) {\n    return 0;\n  }\n  if (isGreaterThan(version, other)) {\n    return 1;\n  }\n  return -1;\n}\n\nfunction matches(version: string, range: string): boolean {\n  return equals(version, range);\n}\n\nexport const api: VersioningApi = {\n  isCompatible,\n  isSingleVersion,\n  isStable,\n  isValid,\n  isVersion,\n\n  getMajor,\n  getMinor,\n  getPatch,\n\n  equals,\n  isGreaterThan,\n  getSatisfyingVersion,\n  minSatisfyingVersion,\n  getNewValue,\n  sortVersions,\n\n  matches,\n};\n\nexport default api;\n"]}